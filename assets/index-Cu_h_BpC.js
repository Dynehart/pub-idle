var e,t=Object.defineProperty,s=(e,s,i)=>((e,s,i)=>s in e?t(e,s,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[s]=i)(e,"symbol"!=typeof s?s+"":s,i);import{r as i}from"./phaser-DJe_tbjO.js";!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver(e=>{for(const s of e)if("childList"===s.type)for(const e of s.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)}).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?t.credentials="include":"anonymous"===e.crossOrigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();var a=i();const n="MainMenu",r="UpgradeTree",o="Preloader",h="AnimationManager",c="MainScene",l="IdleScene",d="ActionScene";class p extends Error{constructor(e){super(e=e?`missing player object in class: ${e}`:"missing player object in class")}}class u extends Error{constructor(e){super(`class ${e} was not initialized correctly`)}}const m=()=>{const e=new WeakMap;return(t,s,i)=>{const a=i.value;if(!1===((e,t)=>"update"!==t?(console.error(new Error("must be used on update")),!1):"function"==typeof e&&2===e.length)(a,s))throw new Error("you fucked up a decorator dawg");return i.value=function(t,s){const i=e.get(this)??0;t>3e4*i&&(e.set(this,i+1),console.log(`[UPDATE] ${this.constructor.name}`)),a.call(this,t,s)},i}},g=e=>{var t;if(e.health.curr<=0&&e.die(),e.health.bar||(e.health.bar=e.scene.add.graphics(),null==(t=e.scene.UILayer)||t.add(e.health.bar)),e.health.bar.clear(),e.health.curr===e.health.max||e.health.curr<=0)return;const s=e.x-50,i=e.y-50-30;e.health.bar.fillStyle(2236962,1),e.health.bar.fillRect(s,i,100,20);const a=100/e.health.max;e.health.bar.fillStyle(65280,1),e.health.bar.fillRect(s,i,Phaser.Math.Clamp(e.health.curr*a,0,100),20)},y=()=>{console.log("noop called")},f=class e{constructor(t,i){if(s(this,"keys",new Map),s(this,"buttons",new Map),s(this,"_gamepadPlugin"),s(this,"_keyboardPlugin"),s(this,"gamepad"),s(this,"keyses"),s(this,"prompts"),s(this,"setup",!1),s(this,"keyboardIsConfigured",!1),s(this,"connected",!1),s(this,"last","kbm"),s(this,"onTab",y),s(this,"onPause",y),s(this,"interactTarget"),s(this,"onInteract",()=>{var e,t;null==(e=this.interactTarget)||e.onInteract(),null==(t=this.prompts)||t.background.setVisible(!1),this.prompts.interact.xbox.setVisible(!1),this.prompts.interact.keyboard.setVisible(!1)}),this.scene=t,this.num=i,e._instance)return e._instance;e._instance=this,this.prompts={background:this.scene.add.rectangle(this.scene.scale.width/2,this.scene.scale.height-200,256,128,0,.75).setVisible(!1),interact:{xbox:this.scene.add.image(this.scene.scale.width/2,this.scene.scale.height-200,"xbox","xbox_button_color_x").setVisible(!1).setScale(.75),keyboard:this.scene.add.image(this.scene.scale.width/2,this.scene.scale.height-200,"kbm","keyboard_e").setVisible(!1).setScale(.75)},exit:{xbox:this.scene.add.image(this.scene.scale.width/2,this.scene.scale.height-200,"xbox","xbox_button_color_b").setVisible(!1).setScale(.75),keyboard:this.scene.add.image(this.scene.scale.width/2,this.scene.scale.height-200,"kbm","keyboard_escape").setVisible(!1).setScale(.75)}}}get gamepadPlugin(){if(null===this.scene.input.gamepad)throw new Error("missing gamepad plugin");return this._gamepadPlugin||(this._gamepadPlugin=this.scene.input.gamepad),this._gamepadPlugin}get keyboardPlugin(){if(null===this.scene.input.keyboard)throw new Error("missing keyboard plugin");return this._keyboardPlugin||(this._keyboardPlugin=this.scene.input.keyboard),this._keyboardPlugin}static get instance(){if(!e._instance)throw new Error("InputProvider has not been instantiated");return e._instance}setupController(){this.setup||(this.gamepadPlugin.on("down",(e,t)=>{if(e.id.toLowerCase().includes("xbox")?this.last="xbox":this.last="ps4",!(e instanceof Phaser.Input.Gamepad.Gamepad))throw new Error("types are wrong");if(!(t instanceof Phaser.Input.Gamepad.Button))throw new Error("types are wrong");t.index===Phaser.Input.Gamepad.Configs.XBOX_360.BACK&&this.onTab(),t.index===Phaser.Input.Gamepad.Configs.XBOX_360.START&&this.onPause(),t.index===Phaser.Input.Gamepad.Configs.XBOX_360.X&&this.onInteract()}),this.setup=!0)}setupKeyboard(){this.keyboardIsConfigured||(this.keyboardIsConfigured=!0,this.keyses={up:[this.keyboardPlugin.addKey(Phaser.Input.Keyboard.KeyCodes.W),this.keyboardPlugin.addKey(Phaser.Input.Keyboard.KeyCodes.UP)],left:[this.keyboardPlugin.addKey(Phaser.Input.Keyboard.KeyCodes.A),this.keyboardPlugin.addKey(Phaser.Input.Keyboard.KeyCodes.LEFT)],down:[this.keyboardPlugin.addKey(Phaser.Input.Keyboard.KeyCodes.S),this.keyboardPlugin.addKey(Phaser.Input.Keyboard.KeyCodes.DOWN)],right:[this.keyboardPlugin.addKey(Phaser.Input.Keyboard.KeyCodes.D),this.keyboardPlugin.addKey(Phaser.Input.Keyboard.KeyCodes.RIGHT)],pause:[this.keyboardPlugin.addKey(Phaser.Input.Keyboard.KeyCodes.ESC)],upgrade:[this.keyboardPlugin.addKey(Phaser.Input.Keyboard.KeyCodes.TAB)],shift:[this.keyboardPlugin.addKey(Phaser.Input.Keyboard.KeyCodes.SHIFT)],interact:[this.keyboardPlugin.addKey(Phaser.Input.Keyboard.KeyCodes.E),this.keyboardPlugin.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE)]},this.keyses.upgrade[0].on("up",()=>{this.last="kbm",this.onTab()}),this.keyses.pause[0].on("up",()=>{this.last="kbm",this.onPause()}),this.keyses.interact[0].on("up",()=>{this.last="kbm",this.onInteract()}))}updateConnection(){this.connected||(this.setupController(),this.gamepad=this.gamepadPlugin.gamepads[this.num],this.gamepad&&(console.log(this.gamepad),this.connected=!0))}updateDisconnect(){this.connected&&(this.connected=!1)}get(e){let t=this.keys.get(e);t||(t=[],this.keys.set(e,t));let s=this.buttons.get(e);return s||(s=[],this.buttons.set(e,s)),{keys:t,buttons:s}}isDown(e){const{keys:t,buttons:s}=this.get(e);for(const i of t)if(i.isDown)return!0;for(const i of s)if(i.pressed)return!0;return!1}setOnTab(e){this.onTab=e}setOnPause(e){console.log(e),this.onPause=e}setOnInteract(e){var t;this.interactTarget=e,null==(t=this.prompts)||t.background.setVisible(!0),"xbox"===this.last?(this.prompts.interact.xbox.setVisible(!0),this.prompts.interact.keyboard.setVisible(!1)):(this.prompts.interact.xbox.setVisible(!1),this.prompts.interact.keyboard.setVisible(!0))}removeOnInteract(e){var t;this.interactTarget===e&&(this.interactTarget=void 0,null==(t=this.prompts)||t.background.setVisible(!1),this.prompts.interact.xbox.setVisible(!1),this.prompts.interact.keyboard.setVisible(!1))}get aiming(){let e=this.keyses.shift[0].isDown;return this.gamepad&&(e=e||this.gamepad.L2>.5),e}target(e){let{x:t,y:s}=this.scene.input.activePointer,i=Phaser.Math.Angle.Between(e.x,e.y,t,s);const{x:a,y:n}=this.axes("right");return 0===a&&0===n||(i=Phaser.Math.Angle.Between(0,0,a,n),t=e.x,s=e.y),{x:t,y:s,angle:i}}axes(e){if(!this.gamepad)return{x:0,y:0};const t="left"===e?0:2,s=this.gamepad.axes[0+t],i=this.gamepad.axes[1+t];let a=0,n=0;return void 0!==s&&void 0!==i&&(a=s.getValue(),n=i.getValue()),0!==a&&0!==n&&(this.last="xbox"),{x:a,y:n}}position(){let{x:e,y:t}=this.axes("left");const s=this.keyses.up[0].isDown||this.keyses.up[1].isDown,i=this.keyses.left[0].isDown||this.keyses.left[1].isDown,a=this.keyses.down[0].isDown||this.keyses.down[1].isDown,n=this.keyses.right[0].isDown||this.keyses.right[1].isDown;if(i&&(e-=1),n&&(e+=1),s&&(t-=1),a&&(t+=1),(s||i||a||n)&&(this.last="kbm"),e<.1&&e>-.1&&(e=0),t<.1&&t>-.1&&(t=0),0===e&&0===t)return[e,t];const r=e**2+t**2;return r>1&&(e/=Math.sqrt(r),t/=Math.sqrt(r)),[e,t]}update(e,t){this.setupKeyboard(),this.updateConnection()}};s(f,"_instance");let b=f;const w={fontFamily:"Arial Black",fontSize:40,color:"#ffffff",stroke:"#000000",strokeThickness:8,align:"center"};Phaser.Physics.Arcade.Sprite;Phaser.Physics.Arcade.Sprite;Phaser.Physics.Arcade.Sprite;Phaser.Physics.Arcade.Sprite;Math.max(20,0);const x=e=>{const t=[];for(let i=0;i<e;i++){const s=Math.random()*((i+1)/e),a=160+80*Math.random();t.push({position:s,speed:a})}let s=1;return t.reduce((e,t)=>(s=Math.min(s,Math.abs(e.position-t.position)),t)),s<.1?(console.log("retrying"),x(e)):t},v=class e{constructor(){for(let t=0;t<240;t++){if(t%2!=0){e.table.push([]);continue}const s=Math.ceil(2+2*Math.random());e.table.push(x(s))}}static next(){e.instance||(e.instance=new e),e.idx>=e.table.length&&(console.warn("random numbers exhausted"),e.idx=0);const t=e.table[e.idx++];if(void 0===t)throw new Error;return t}};s(v,"idx",0),s(v,"table",[]),s(v,"instance");Phaser.Scene;const k=["bat.png","blob.png","blob_1.png","blobie-walk copy.png","blobie-walk.png","brawler48x48.png","char.png","drone.png","portal-particles_240_340.png","portal_240_340.png","rat.png","stick-head.png","stick.png","thickius.png"],P=[1,5,25,125,625],S="xp_",_=["grid","castle","pebble","menu-item","border","border-wide","close-icon","pickaxe","sword","bow","arrow"],I=new Map([["grid","grid-ps2.png"],["castle","castle.png"],["pebble","pebble.gif"],["menu-item","border-wide.png"],["close-icon","close-icon.png"]]);class M extends a.Scene{constructor(){super(o)}init(){this.add.image(512,384,"background"),this.add.rectangle(512,384,468,32).setStrokeStyle(1,16777215);const e=this.add.rectangle(282,384,4,28,16777215);this.load.on("progress",t=>{e.width=4+460*t})}preload(){this.load.setPath("assets"),this.load.image("logo","logo.png"),this.load.spritesheet("brawler","animations/brawler48x48.png",{frameWidth:48,frameHeight:48}),this.preloadTexture(),this.load.spritesheet("fullscreen","ui/fullscreen.png",{frameWidth:64,frameHeight:64}),this.load.atlas("xbox","ui/xbox.png","ui/xbox.json"),this.load.atlas("kbm","ui/kbm.png","ui/kbm.json"),this.load.atlas("flares","particles/flares.png","particles/flares.json"),this.load.spritesheet("stick","animations/stick.png",{frameWidth:180,frameHeight:339.375}),this.load.spritesheet("stick-head","animations/stick-head.png",{frameWidth:18,frameHeight:18}),this.load.spritesheet("drone","animations/drone.png",{frameWidth:34,frameHeight:34}),this.load.spritesheet("blobie-walk","animations/blobie-walk.png",{frameWidth:34,frameHeight:34}),this.load.spritesheet("char","animations/char.png",{frameWidth:34,frameHeight:34}),this.load.spritesheet("rat","animations/rat.png",{frameWidth:34,frameHeight:34}),this.load.spritesheet("blob","animations/blob.png",{frameWidth:34,frameHeight:34}),this.load.spritesheet("bat","animations/bat.png",{frameWidth:34,frameHeight:34}),k.forEach(e=>{const[t,s,i]=e.replace(".png","").split("_");void 0!==t&&void 0!==s&&void 0!==i&&(console.log(t,s,i),this.load.spritesheet(t,`animations/${e}`,{frameWidth:parseInt(s),frameHeight:parseInt(i)}))}),this.load.glsl("fire","shaders/fire.glsl"),this.load.image("repeating-background","textures/tile.png")}preloadXP(){for(const e of P)this.load.image(`${S}${e}`,`textures/xp/${e}.png`)}preloadTexture(){const e="textures";for(const t of _){const s=I.get(t);void 0===s?this.load.image(t,`${e}/${t}.png`):this.load.image(t,`${e}/${s}`)}this.load.atlas("ores","textures/ores.png","textures/ores.json"),this.preloadXP()}create(){this.scene.start(h),this.scene.start(c),console.log(this.scene.manager.getScenes(!0))}}class T extends Phaser.Physics.Arcade.Sprite{constructor(e,t,i,a){var n,r,o;if(!1===P.includes(a))throw new Error("invalid xp amount");super(e,t,i,`${S}${a}`),s(this,"timer"),this.scene=e,this.amount=a,null==(n=e.xp)||n.add(this),null==(r=this.preFX)||r.setPadding(32),null==(o=this.preFX)||o.addShadow(),this.scene.add.existing(this),this.timer=this.scene.time.addEvent({delay:1e3,callback:()=>{this.collapse()},callbackScope:this,loop:!0})}destroy(e){this.timer.destroy(),super.destroy(e)}collapse(){const e=this.scene.physics.overlapCirc(this.x,this.y,250),t=new Set;for(const s of e){const e=s.gameObject;if(e instanceof T&&e.amount===this.amount&&(t.add(e),5===t.size)){const e=5*this.amount;this.setTexture(`${S}${e}`),this.amount=e;for(const s of t)s!==this&&s.destroy();t.clear()}}}}class E extends Phaser.Physics.Arcade.Sprite{constructor(e,t){var i,a,n;super(e,0,0,t.TEXTURE_KEY),s(this,"lastDmgTime",0),s(this,"applyDamage",!1),s(this,"health",{curr:0,max:0}),s(this,"healthBar",null),s(this,"id",crypto.randomUUID().slice(-4)),this.scene=e,this.info=t,this.setOrigin(.5,.5).setScale(2),this.health={curr:t.stats.health,max:t.stats.health},this.scene.physics.add.existing(this),this.scene.player&&this.scene.physics.add.collider(this.scene.player,this,()=>{this.applyDamage=!0}),null==(i=this.preFX)||i.setPadding(64),null==(a=this.preFX)||a.addShadow(),this.spawn(),null==(n=this.scene.enemies)||n.add(this)}enableNew(){}moveToRandomEdge(){let e=0,t=0;const s=Math.floor(4*Math.random());0===s?(e=Math.random()*this.scene.scale.width,t=0):1===s?(e=this.scene.scale.width,t=Math.random()*this.scene.scale.height):2===s?(e=Math.random()*this.scene.scale.width,t=this.scene.scale.height):3===s&&(e=0,t=Math.random()*this.scene.scale.height),this.setPosition(e,t)}damage(e){this.scene.player&&this.applyDamage&&(this.applyDamage=!1,this.lastDmgTime<e-this.info.stats.attackSpeed&&(this.lastDmgTime=e,this.scene.player.health.curr-=this.info.stats.damage))}dealDamage(e){this.health.curr-=e}spawn(e=1){const t=this.info.stats.health*1.02**(e-1);this.health.curr=t,this.health.max=t,this.setActive(!0),this.setVisible(!0),this.moveToRandomEdge(),this.body instanceof Phaser.Physics.Arcade.Body&&this.body.setEnable(!0)}die(){console.debug(this.id,"dead"),this.setVisible(!1),this.body instanceof Phaser.Physics.Arcade.Body&&this.body.setEnable(!1);const e=this.x,t=this.y;new T(this.scene,e,t,this.info.loot.xp),this.setActive(!1)}update(e,t){g(this),this.setVelocity(0),this.move(t),this.damage(e),this.reachedPlayer||this.play(this.info.FRAMES.MOVE,!0)}move(e){if(!this.scene.player)throw new p;if(this.reachedPlayer)return;const t=this.scene.player.x-this.x,s=this.scene.player.y-this.y;if(Math.sqrt(t*t+s*s)>1){const i=this.info.stats.moveSpeed*(1+.1*this.info.stats.level)/2,a=Math.atan2(s,t),n=Math.cos(a)*i*(e/1e3),r=Math.sin(a)*i*(e/1e3);this.flipX=n<0,this.x+=n,this.y+=r,this.setPosition(this.x+n,this.y+r)}}get reachedPlayer(){if(!this.scene.player)throw new p;const e=this.scene.player.x-this.x,t=this.scene.player.y-this.y;return e*e+t*t<this.info.stats.range**2}}class C extends Phaser.Physics.Arcade.Group{constructor(e,t){super(e.physics.world,e,t.config),this.scene=e,this.info=t,this.runChildUpdate=!0}getFirstDead(){const e=super.getFirstDead(!1);return e instanceof E?e:!1===this.isFull()?new E(this.scene,this.info):void 0}spawn(e){for(let t=0;t<e;t++){const e=this.getFirstDead();e&&(e.spawn(),super.add(e,!0))}return this}add(){const e=new E(this.scene,this.info);return super.add(e,!0),this}}const K=[{TEXTURE_KEY:"rat",FRAMES:{IDLE:{key:"rat-idle",config:{frames:[0,1]}},MOVE:{key:"rat-move",config:{frames:[0,1]}}},stats:{level:1,damage:5,attackSpeed:400,moveSpeed:150,health:5,range:50},loot:{xp:1},config:{maxSize:10},metadata:{startTime:0,spawn:[{rate:2e3,count:1,max:15},{rate:1e3,count:1,max:25},{rate:500,count:1,max:50},{rate:1e3,count:1,max:25},{rate:2e3,count:1,max:15}],lastSpawn:0}},{TEXTURE_KEY:"blob",FRAMES:{IDLE:{key:"blob-idle",config:{frames:[0,1]}},MOVE:{key:"blob-move",config:{frames:[0,1]}}},stats:{level:2,damage:20,attackSpeed:800,moveSpeed:100,health:10,range:50},config:{maxSize:10},loot:{xp:5},metadata:{startTime:60,spawn:[{rate:2e3,count:1,max:15},{rate:1e3,count:1,max:25},{rate:500,count:1,max:50},{rate:1e3,count:1,max:25},{rate:2e3,count:1,max:15}],lastSpawn:0}},{TEXTURE_KEY:"bat",FRAMES:{IDLE:{key:"bat-idle",config:{frames:[0,1]}},MOVE:{key:"bat-move",config:{frames:[0,1]}}},stats:{level:3,damage:5,attackSpeed:200,moveSpeed:250,health:5,range:250},config:{maxSize:25},loot:{xp:1},metadata:{startTime:120,spawn:[{rate:2e3,count:1,max:15},{rate:1e3,count:1,max:25},{rate:500,count:1,max:50},{rate:1e3,count:1,max:25},{rate:2e3,count:1,max:15}],lastSpawn:0}}];class R{constructor(e){s(this,"groups",new Map),s(this,"scene"),this.scene=e;for(const t of K)this.groups.set(t.TEXTURE_KEY,new C(this.scene,t))}spawn(e,t){const s=this.groups.get(e);null==s||s.spawn(t)}update(e,t){const s=Math.floor(e/1e3),i=Math.floor(s/1e3);for(const[,a]of this.groups){const{info:{metadata:n}}=a,{startTime:r,spawn:o}=n,h=o[i]??o[o.length-1];if(!h)throw new Error("something's wrong");if(s>=r&&n.lastSpawn+h.rate<e){const t=h.max-a.countActive();a.spawn(Math.min(t,h.count)),n.lastSpawn=e}a.preUpdate(e,t)}}}var O=Object.defineProperty,D=Object.getOwnPropertyDescriptor;const A=[l,d],z=(e=class extends Phaser.Scene{constructor(){if(super(c),s(this,"GameLayer",null),s(this,"UILayer",null),s(this,"MenuLayer",null),s(this,"menuOpen",!1),s(this,"player"),s(this,"enemyManager"),s(this,"enemies",null),s(this,"inputProvider"),s(this,"activeScene",l),s(this,"switchers",[]),s(this,"switcher",()=>{var e,t;if(this.scene.launch(this.activeScene),this.activeScene===n){const s=400,i=200;let a=this.scale.baseSize.width/2-s/2*(A.length-1)-10*(A.length-1);for(const n of A){const r=this.add.rectangle(a,i/2,s,i,n===this.activeScene?30464:16711680).setInteractive().on("pointerup",()=>{this.launch(n);for(const e of this.switchers)e===r?e.setFillStyle(30464):e.setFillStyle(16711680)}),o=this.add.text(a,i/2,n,{fontSize:40,color:"#ffffff",stroke:"#000000",strokeThickness:8,align:"center"}).setOrigin(.5);null==(e=this.UILayer)||e.add(r),null==(t=this.UILayer)||t.add(o),this.switchers.push(r),a+=s+10}}}),e.instance)return e.instance;e.instance=this}create(){var e;if(this.GameLayer=this.add.layer(),this.UILayer=this.add.layer(),this.MenuLayer=this.add.layer().setVisible(!1).setDepth(10),null==(e=this.input.mouse)||e.disableContextMenu(),this.inputProvider=new b(this,0),!this.input.keyboard)throw new Error("why no keyboard?");this.switcher(),(e=>{const t=e.add.image(e.scale.width-16,16,"fullscreen",0).setOrigin(1,0).setInteractive();t.on("pointerup",()=>{console.log("width",e.scale.width,"height",e.scale.height),console.log("baseSize",e.scale.baseSize),console.log("gameSize",e.scale.gameSize),console.log("displaySize",e.scale.displaySize),console.log("displaySize",e.scale.displaySize.width,e.scale.displaySize.height),e.scale.isFullscreen?(t.setFrame(0),e.scale.stopFullscreen()):(t.setFrame(1),e.scale.startFullscreen())},void 0)})(this),this.inputProvider.setOnTab(()=>{this.show(r,this.activeScene)}),this.inputProvider.setOnPause(()=>{this.show(n,this.activeScene),this.menuOpen=!this.menuOpen})}show(e,t){const s=this.scene.isActive(e),i=this.scene.isVisible(e);s||this.scene.launch(e),this.cameras.main.setBackgroundColor(i?"rgba(0,0,0,0)":"rgba(0,0,0,32)"),this.scene.setVisible(!i,e),this.scene.setActive(!s,e),this.scene.setActive(s,t)}launch(e){this.menuOpen&&(this.show(n,this.activeScene),this.menuOpen=!this.menuOpen),this.scene.key===c?(this.scene.stop(this.activeScene),this.scene.launch(e)):this.scene.start(e),this.activeScene=e}update(e,t){var s;null==(s=this.inputProvider)||s.update(e,t)}},s(e,"instance"),e);((e,t,s)=>{for(var i,a=D(t,s),n=e.length-1;n>=0;n--)(i=e[n])&&(a=i(t,s,a)||a);a&&O(t,s,a)})([m()],z.prototype,"update");let L=z;const F={attack:{duration:250,delay:150,cooldown:2e3,delta:0,speed:3840,range:2e3,damage:{start:9,end:15},projectiles:{total:2,fired:0,pierce:2},projectile:{vx:0,vy:0,vangular:0,pierce:Number.POSITIVE_INFINITY,projectiles:2,speed:800,duration:150,offsetAngle:0,range:0,damage:.1},deviation:Math.PI/32},damage:1};class B extends Phaser.Physics.Arcade.Sprite{constructor(e,t,i,a,n){super(e,t,i,"arrow"),s(this,"enemiesDamaged",[]),s(this,"pierce",0),s(this,"stats",F),s(this,"created",!1),this.scene=e,this.rotation=a,e.add.existing(this),e.physics.add.existing(this),this.setRotation(a).setScale(G/3),this.setCollideWorldBounds(!0)}create(){if(this.created)return;const e=Math.cos(this.rotation),t=Math.sin(this.rotation),s=e*this.stats.attack.speed,i=t*this.stats.attack.speed;this.setVelocity(s,i),this.scene.time.addEvent({delay:this.stats.attack.range/this.stats.attack.speed*1e3,callback:()=>{this.destroy()}}),this.created=!0}update(e,t){if(this.create(),!this.scene.player)throw new p;const{left:s,top:i,width:a,height:n}=this.getBounds(),r=this.scene.physics.overlapRect(s,i,a,n);for(const o of r){const e=o.gameObject;e instanceof E&&(this.enemiesDamaged.includes(e)||(e.dealDamage(this.stats.damage),this.enemiesDamaged.push(e),this.pierce++,this.pierce>=this.stats.attack.projectiles.pierce&&this.destroy()))}}}const V={attack:{duration:250,delay:150,cooldown:2e3,delta:0,speed:3840,range:2e3,damage:{start:9,end:15},projectiles:{total:2,fired:0,pierce:2},projectile:{vx:0,vy:0,vangular:800,pierce:Number.POSITIVE_INFINITY,projectiles:2,speed:800,duration:150,offsetAngle:800*Phaser.Math.DEG_TO_RAD*.15/2,range:0,damage:5},deviation:0},damage:5};let j=class extends Phaser.Physics.Arcade.Sprite{constructor(e,t,i,a,n){super(e,t,i,"sword"),s(this,"enemiesDamaged",[]),s(this,"pierce",0),s(this,"stats",V),s(this,"created",!1),this.scene=e,e.add.existing(this),e.physics.add.existing(this),this.stats.attack.projectile.vangular=this.stats.attack.projectile.vangular*n,this.setRotation(a).setScale(G).setOrigin(-.5,.5),this.setCollideWorldBounds(!0)}create(){this.created||(this.setVelocityX(this.stats.attack.projectile.vx),this.setVelocityY(this.stats.attack.projectile.vy),this.body instanceof Phaser.Physics.Arcade.Body&&(this.body.maxAngular=2160),this.setAngularVelocity(this.stats.attack.projectile.vangular),this.scene.time.addEvent({delay:this.stats.attack.projectile.duration,callback:()=>{this.destroy()}}),this.created=!0)}update(e,t){if(this.create(),!this.scene.player)throw new p;this.x=this.scene.player.x,this.y=this.scene.player.y;const{left:s,top:i,width:a,height:n}=this.getBounds(),r=this.scene.physics.overlapRect(s,i,a,n);for(const o of r){const e=o.gameObject;e instanceof E&&(this.enemiesDamaged.includes(e)||(e.dealDamage(this.stats.damage),this.enemiesDamaged.push(e),this.pierce++,this.pierce>=this.stats.attack.projectile.pierce&&this.destroy()))}}};class q{constructor(e,t){if(s(this,"projectiles"),s(this,"keys"),s(this,"cone"),s(this,"arc"),this.scene=e,this.projectile=t,this.projectiles=this.scene.physics.add.group(),this.projectiles.runChildUpdate=!0,!this.scene.input.keyboard)throw new Error("why no keyboard?");this.keys={alt:this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.ALT)},this.cone=this.scene.add.graphics({lineStyle:{width:4,color:16711935,alpha:.1},fillStyle:{color:0,alpha:.05}}),this.arc=this.scene.add.graphics({lineStyle:{width:4,color:16777215,alpha:.5},fillStyle:{color:0,alpha:0}})}get stats(){switch(this.projectile){case"arrow":return F;case"sword":return V;default:throw new Error("invalid projectile")}}attack({x:e,y:t,angles:{actual:s}}){const{projectiles:i}=this.stats.attack,a=i.fired%2==0?-1:1;if("sword"===this.projectile){const i=new j(this.scene,e,t,s,a);this.projectiles.add(i)}else{const i=new B(this.scene,e,t,s,a);this.projectiles.add(i)}}aim({angles:{target:e}}){var t;if(this.cone.clear(),!(null==(t=b.instance)?void 0:t.aiming))return;if(!this.scene.player)throw new p;const{deviation:s,range:i}=this.stats.attack,{player:a}=this.scene;this.cone.beginPath(),this.cone.arc(a.x,a.y,i,e-s,e+s,!1).strokePath().lineTo(a.x,a.y).fillPath()}position(e){if(!this.scene.player)throw new p;if(!b.instance)throw new Error;const{x:t,y:s,angle:i}=b.instance.target(this.scene.player),a=e+i,n=Math.random()*this.stats.attack.deviation*2-this.stats.attack.deviation,r=i+n,o=Math.cos(r),h=Math.sin(r),c=o*this.stats.attack.speed,l=h*this.stats.attack.speed;return{x:this.scene.player.x+40*o,y:this.scene.player.y+40*h,targetX:t,targetY:s,vx:c,vy:l,angles:{target:i,offset:a,actual:r,deviation:n}}}cooldown({targetX:e,targetY:t}){var s;if(this.arc.clear(),!(null==(s=b.instance)?void 0:s.aiming))return;const{attack:i}=this.stats,a=i.cooldown,n=1-Math.min(i.delta/a,1),r=2*Math.PI*n;this.arc.arc(e,t,50,0,r,!1).strokePath().fillPath()}update(e,t){const{attack:s}=this.stats,{projectiles:i}=s;s.delta+=t;const a=i.fired%2==0?-1:1,n=this.position(a*this.stats.attack.projectile.offsetAngle);this.aim(n),s.delta>=s.cooldown+(s.duration+s.delay)*i.fired&&(i.fired++,this.attack(n),i.fired>=i.total&&(s.delta=0,i.fired=0)),this.cooldown(n)}}const X=Math.PI/3,N={attack:{duration:250,delay:150,cooldown:2e3,delta:0,damage:{start:9,end:15},projectiles:{total:2,fired:0,pierce:-1},deviation:0,speed:1e3,range:100},damage:5};class U{constructor(e,t=N){var i,a;s(this,"hitbox"),s(this,"using","sword"),s(this,"tweens"),s(this,"rotation",{from:-60,center:0,to:60,offsetX:0,offsetY:0}),s(this,"enemiesDamaged",[]),s(this,"count",12),this.scene=e,this.stats=t,this.hitbox=e.add.sprite(0,0,"sword").setScale(G).setVisible(!1),null==(i=this.scene.GameLayer)||i.add(this.hitbox),null==(a=this.scene.input.keyboard)||a.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE).on("up",()=>{switch(this.using){case"spear":this.using="sword";break;case"sword":this.using="spear"}});const n=this.scene.tweens.addCounter({paused:!0,persist:!0,from:0,to:100,ease:"back.in",delay:this.stats.attack.delay,duration:this.stats.attack.duration,onStart:()=>{this.onTweenStart()},onUpdate:(e,t,s,i,a)=>{const n=e.getValue();if(null===n)throw new Error("invalid tween");const r=this.rotation.center,o=Math.cos(r)*n,h=Math.sin(r)*n,c=i<a;this.position(this.rotation.center,o,h),this.collisions(!c)},onComplete:()=>{this.onTweenComplete()}}),r=this.scene.tweens.addCounter({paused:!0,persist:!0,from:-1*X,to:X,ease:"back.in",delay:this.stats.attack.delay,duration:this.stats.attack.duration,onStart:()=>{this.onTweenStart()},onUpdate:(e,t,s,i,a)=>{const n=e.getValue();if(null===n)throw new Error("invalid tween");const r=i<a;let o=this.rotation.center+n;this.stats.attack.projectiles.fired%2==0&&(o=this.rotation.center-n),this.position(o,this.rotation.offsetX,this.rotation.offsetY),this.collisions(!r)},onComplete:()=>{this.onTweenComplete()}});this.tweens={spear:n,sword:r}}get tween(){return this.tweens[this.using]}onTweenStart(){if(!this.scene.player)throw new p;if(!this.scene.enemies)throw new u("scene.enemies");const e=this.scene.physics.closest(this.scene.player,this.scene.enemies.getChildren());if(!(e instanceof E))throw new Error("");const t=Phaser.Math.Angle.Between(this.scene.player.x,this.scene.player.y,e.x,e.y);this.rotation={from:t-Math.PI/3,center:t,to:t+Math.PI/3,offsetX:40*Math.cos(t),offsetY:40*Math.sin(t)},this.position(t-Math.PI/3,0,0),this.hitbox.setVisible(!0)}onTweenComplete(){this.hitbox.setVisible(!1),this.enemiesDamaged=[],this.tween.pause().seek(0)}position(e,t,s){if(!this.scene.player)throw new p;this.hitbox.setOrigin(-.2,.5);const i=this.scene.player.x+t,a=this.scene.player.y+s;this.hitbox.setPosition(i,a),this.hitbox.setRotation(e)}positionForStaticAttack(e,t,s,i){if(!this.scene.player)throw new p;i&&this.hitbox.setFlipX(this.scene.player.flipX);const a=this.hitbox.flipX?-1:1,n=this.hitbox.flipX?1.2:-.2;this.hitbox.setOrigin(n,.5);const r=this.scene.player.x+t*a,o=this.scene.player.y+s;this.hitbox.setPosition(r,o),this.hitbox.setRotation(e*a)}collisions(e){if(!e)return;const{left:t,top:s,width:i,height:a}=this.hitbox.getBounds(),n=this.scene.physics.overlapRect(t,s,i,a);for(const r of n){const e=r.gameObject;e instanceof E&&(this.enemiesDamaged.includes(e)||(e.dealDamage(this.stats.damage),this.enemiesDamaged.push(e)))}}update(e,t){this.stats.attack.delta+=t;const{attack:s}=this.stats,{projectiles:i}=s;if(s.delta>=s.cooldown+(s.duration+s.delay)*i.fired){if(this.tween.isPlaying())return;i.fired++,this.tween.resume(),i.fired>=i.total&&(s.delta=0,i.fired=0)}}}const G=3;class $ extends Phaser.Physics.Arcade.Sprite{constructor(e,t,i,a){var n;if(super(e,t,i,a,void 0),s(this,"weapons",new Map),s(this,"active_weapon","bow"),s(this,"health",{curr:100,max:100}),s(this,"xp",{curr:0,max:10}),s(this,"level",1),s(this,"pause",!1),s(this,"velocity",160),s(this,"capture"),s(this,"hitbox",{}),s(this,"keys"),s(this,"alive",!0),this.scene=e,this.animations(),e.add.existing(this),e.physics.add.existing(this),null==(n=e.GameLayer)||n.add(this),this.setFriction(1),this.setScale(G),this.setCollideWorldBounds(!0),this.setBounce(1),e instanceof Y&&(this.weapons.set("sword-tween",new U(e)),this.weapons.set("sword",new q(e,"sword")),this.weapons.set("bow",new q(e,"arrow"))),!this.scene.input.keyboard)throw new Error("why no keyboard?");this.keys={up1:this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.W),up2:this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.UP),left1:this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.A),left2:this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.LEFT),down1:this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.S),down2:this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.DOWN),right1:this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.D),right2:this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.RIGHT),tab:this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.TAB),rotateRight1:this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.E),rotateLeft1:this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.Q),updown:this.scene.input.keyboard.createCombo([Phaser.Input.Keyboard.KeyCodes.UP,Phaser.Input.Keyboard.KeyCodes.DOWN],{resetOnMatch:!0})},this.capture=this.scene.input.keyboard.addCapture([Phaser.Input.Keyboard.KeyCodes.UP,Phaser.Input.Keyboard.KeyCodes.LEFT])}physics(){const e=(this.width+10)*this.scaleX,t=(this.height+10)*this.scaleY,s=this.x-e/2,i=this.y-t/2;if(void 0===this.hitbox.loot){const a=this.scene.physics.add.body(s,i,e,t);return this.hitbox={loot:a},void(this.scene instanceof Y&&this.scene.xp&&this.scene.physics.add.collider(a,this.scene.xp,(e,t)=>{t instanceof T&&(this.xp.curr+=t.amount,t.destroy())}))}this.hitbox.loot.x=s,this.hitbox.loot.y=i}animations(){this.anims.create({key:"player-idle",frames:this.anims.generateFrameNumbers("char",{frames:[0,1]}),frameRate:4,repeat:-1}),this.anims.create({key:"player-move",frames:this.anims.generateFrameNumbers("char",{frames:[2,3]}),frameRate:4,repeat:-1})}die(){this.scene.scene.start(l),L.instance&&(L.instance.activeScene=l),this.alive&&(this.alive=!1,console.log("player dead"))}update(e,t){this.physics(),g(this),(e=>{var t;e.xp.curr>=e.xp.max&&(e.xp.curr=e.xp.curr%e.xp.max,e.level+=1,e.xp.max=2*e.xp.max),e.xp.bar||(e.xp.bar=e.scene.add.graphics(),null==(t=e.scene.UILayer)||t.add(e.xp.bar)),e.xp.bar.clear();const s=e.x-50,i=e.y-100;e.xp.bar.fillStyle(2236962,1),e.xp.bar.fillRect(s,i,100,20);const a=100/e.xp.max;e.xp.bar.fillStyle(16777215,1),e.xp.bar.fillRect(s,i,Phaser.Math.Clamp(e.xp.curr*a,0,100),20)})(this);const s=this.weapons.get(this.active_weapon);if(s&&s.update(e,t),this.body instanceof Phaser.Physics.Arcade.Body){if(!b.instance){let e=0,t=0;const s=this.keys.up1.isDown||this.keys.up2.isDown,i=this.keys.left1.isDown||this.keys.left2.isDown,a=this.keys.down1.isDown||this.keys.down2.isDown,n=this.keys.right1.isDown||this.keys.right2.isDown,r=s||i||a||n;return i?this.flipX=!0:n&&(this.flipX=!1),r?this.play("player-move",!0):this.play("player-idle",!0),i&&(e-=160*G),n&&(e+=160*G),s&&(t-=160*G),a&&(t+=160*G),0!==e&&0!==t&&(e=Math.SQRT2*e/2,t=Math.SQRT2*t/2),void this.setVelocity(e,t)}{const[e,t]=b.instance.position();e<0&&(this.flipX=!0),0===e&&0===t?this.play("player-idle",!0):this.play("player-move",!0);const s=160*G,i=s*e,a=s*t;this.setVelocity(i,a)}}}}var H=Object.defineProperty,W=Object.getOwnPropertyDescriptor;class Y extends Phaser.Scene{constructor(){super(d),s(this,"GameLayer",null),s(this,"UILayer",null),s(this,"MenuLayer",null),s(this,"player"),s(this,"enemyManager"),s(this,"enemies",null),s(this,"active",!0),s(this,"xp",null)}create(){var e;this.GameLayer=this.add.layer(),this.UILayer=this.add.layer(),this.MenuLayer=this.add.layer().setVisible(!1).setDepth(10),null==(e=this.input.mouse)||e.disableContextMenu(),this.player=new $(this,this.scale.baseSize.width/2,this.scale.baseSize.height/2,"char"),this.enemies=this.physics.add.group(),this.enemyManager=new R(this),this.xp=this.physics.add.group()}setActive(e){if(!this.GameLayer)throw new u("scene.GameLayer");if(!this.MenuLayer)throw new u("scene.MenuLayer");if(!this.UILayer)throw new u("scene.UILayer");if(!this.enemies)throw new u("scene.enemies");console.log(e),this.MenuLayer.setVisible(!e)}update(e,t){if(!this.player)throw new p;if(!this.enemyManager)throw new u("enemyManager");this.active&&(this.player.update(e,t),this.enemyManager.update(e,t))}}s(Y,"key",""),((e,t,s)=>{for(var i,a=W(t,s),n=e.length-1;n>=0;n--)(i=e[n])&&(a=i(t,s,a)||a);a&&H(t,s,a)})([m()],Y.prototype,"update");const Q=(e,t)=>{e.level<=t&&(0===e.prerequisites.length||(e.level=t+1));for(const s of e.children)Q(s,e.level)},Z=e=>e.id.slice(0,e.id.lastIndexOf("_")),J=(e,t)=>{if(t.availablePoints<e.cost)return!1;if((t.spent.get(e.id)??0)>=e.maxPoints)return!1;for(const s of e.prerequisites)if((t.spent.get(s.id)??0)<s.points)return!1;return!0},ee={damage_1:{id:"damage_1",name:"Damage I",description:"Increase base damage by 5%",cost:1,maxPoints:5,prerequisites:[],level:0},damage_2:{id:"damage_2",name:"Damage II",description:"Increase base damage by 10%",cost:2,maxPoints:5,prerequisites:[{id:"damage_1",points:1,total:5}],level:0},attack_speed_1:{id:"attack_speed_1",name:"Attack Speed I",description:"Increases attack speed by 10%",cost:1,maxPoints:5,prerequisites:[],level:0},attack_speed_2:{id:"attack_speed_2",name:"Attack Speed II",description:"Increases attack speed by 20%",cost:2,maxPoints:5,prerequisites:[{id:"attack_speed_1",points:1,total:5}],level:0},attack_speed_3:{id:"attack_speed_3",name:"Attack Speed III",description:"Increases attack speed by 30%",cost:3,maxPoints:3,prerequisites:[{id:"attack_speed_2",points:1,total:5}],level:0},attack_speed_4:{id:"attack_speed_4",name:"Attack Speed IV",description:"Massive increase to attack speed by 50%",cost:4,maxPoints:2,prerequisites:[{id:"attack_speed_3",points:1,total:5}],level:0},crit_chance_1:{id:"crit_chance_1",name:"Critical Chance I",description:"5% chance to deal double damage",cost:1,maxPoints:3,prerequisites:[{id:"damage_1",points:1,total:5}],level:2},crit_chance_2:{id:"crit_chance_2",name:"Critical Chance II",description:"+10% chance to critically hit",cost:3,maxPoints:2,prerequisites:[{id:"crit_chance_1",points:2}],level:4},crit_chance_3:{id:"crit_chance_3",name:"Critical Chance III",description:"Adds 15% more to critical chance",cost:3,maxPoints:1,prerequisites:[{id:"crit_chance_2",points:1,total:3}],level:0},crit_damage_1:{id:"crit_damage_1",name:"Critical Damage I",description:"Critical hits deal 50% more damage",cost:3,maxPoints:3,prerequisites:[{id:"crit_chance_1",points:1,total:3}],level:0},health_1:{id:"health_1",name:"Health I",description:"Increase maximum health by 10%",cost:1,maxPoints:5,prerequisites:[],level:0},health_2:{id:"health_2",name:"Health II",description:"Increase maximum health by 20%",cost:2,maxPoints:5,prerequisites:[{id:"health_1",points:1,total:5}],level:0},health_3:{id:"health_3",name:"Health III",description:"Increase maximum health by 30%",cost:3,maxPoints:5,prerequisites:[{id:"health_2",points:1,total:5}],level:0},health_4:{id:"health_4",name:"Health IV",description:"Massive increase to health by 50%",cost:5,maxPoints:3,prerequisites:[{id:"health_3",points:1,total:5}],level:0},armor_1:{id:"armor_1",name:"Armor I",description:"Increase armor by 10%",cost:2,maxPoints:5,prerequisites:[{id:"health_1",points:3}],level:2},armor_2:{id:"armor_2",name:"Armor II",description:"Increase armor by 10%",cost:2,maxPoints:5,prerequisites:[{id:"armor_1",points:1,total:5}],level:0},armor_3:{id:"armor_3",name:"Armor III",description:"Increase armor by 15%",cost:3,maxPoints:5,prerequisites:[{id:"armor_2",points:1,total:5}],level:0},armor_4:{id:"armor_4",name:"Armor IV",description:"Increase armor by 25%",cost:4,maxPoints:2,prerequisites:[{id:"armor_3",points:1,total:5}],level:0},mana_1:{id:"mana_1",name:"Mana I",description:"Increase mana pool by 10%",cost:1,maxPoints:5,prerequisites:[],level:0},mana_3:{id:"mana_3",name:"Mana III",description:"Increase mana regeneration by 10%",cost:3,maxPoints:5,prerequisites:[{id:"mana_2",points:1,total:5}],level:0},resource_efficiency:{id:"resource_efficiency",name:"Resource Efficiency",description:"Reduce resource consumption by 10%",cost:4,maxPoints:3,prerequisites:[{id:"mana_3",points:1,total:5}],level:0},health_regen_1:{id:"health_regen_1",name:"Health Regeneration I",description:"Regenerate health 5% faster",cost:1,maxPoints:5,prerequisites:[],level:0},health_regen_2:{id:"health_regen_2",name:"Health Regeneration II",description:"Regenerate health 10% faster",cost:2,maxPoints:5,prerequisites:[{id:"health_regen_1",points:1,total:5}],level:0},mana_regen_2:{id:"mana_regen_2",name:"Mana Regeneration II",description:"Regenerate mana 10% faster",cost:2,maxPoints:5,prerequisites:[{id:"mana_regen_1",points:1,total:5}],level:0},teleportation:{id:"teleportation",name:"Teleportation",description:"Unlocks teleportation ability",cost:10,maxPoints:1,prerequisites:[{id:"mana_2",points:1,total:5}],level:0},shield_ability:{id:"shield_ability",name:"Shield Ability",description:"Grants the ability to shield for 5 seconds",cost:8,maxPoints:1,prerequisites:[{id:"armor_2",points:1,total:5}],level:0},mana_2:{id:"mana_2",name:"Mana II",description:"Increase mana regen by 5%",cost:2,maxPoints:5,prerequisites:[{id:"mana_1",points:3}],level:1},damage_3:{id:"damage_3",name:"Damage III",description:"Increase damage by 15%",cost:3,maxPoints:5,prerequisites:[{id:"damage_2",points:3}],level:3},crit_damage_2:{id:"crit_damage_2",name:"Critical Damage II",description:"Crits deal +50% more damage",cost:3,maxPoints:3,prerequisites:[{id:"crit_damage_1",points:1},{id:"crit_chance_2",points:1}],level:5},mana_regen_1:{id:"mana_regen_1",name:"Mana Regen I",description:"Regenerate 5% mana/sec",cost:2,maxPoints:5,prerequisites:[{id:"mana_2",points:3}],level:3},damage_4:{id:"damage_4",name:"Damage IV",description:"Increases damage by 25%",cost:5,maxPoints:3,prerequisites:[{id:"damage_3",points:3}],level:5},berserk_mode:{id:"berserk_mode",name:"Berserk Mode",description:"Unlocks Berserk: +100% damage, -50% defense for 5s",cost:6,maxPoints:1,prerequisites:[{id:"damage_4",points:1}],level:7},shield_wall:{id:"shield_wall",name:"Shield Wall",description:"Activate to block 90% damage for 3 seconds",cost:6,maxPoints:1,prerequisites:[{id:"armor_1",points:3}],level:6},arcane_burst:{id:"arcane_burst",name:"Arcane Burst",description:"Unleash AoE spell consuming 50% mana",cost:6,maxPoints:1,prerequisites:[{id:"mana_regen_1",points:3}],level:6},precision_mastery:{id:"precision_mastery",name:"Precision Mastery",description:"Crits always do max damage",cost:7,maxPoints:1,prerequisites:[{id:"crit_damage_2",points:3},{id:"crit_chance_3",points:2}],level:8},overclock:{id:"overclock",name:"Overclock",description:"Temporarily double attack speed for 5 seconds (cooldown: 30s)",cost:8,maxPoints:1,prerequisites:[{id:"attack_speed_2",points:5}],level:8},divine_aegis:{id:"divine_aegis",name:"Divine Aegis",description:"One-time shield prevents fatal damage and heals 50%",cost:10,maxPoints:1,prerequisites:[{id:"shield_wall",points:1},{id:"health_1",points:5}],level:10},mana_overflow:{id:"mana_overflow",name:"Mana Overflow",description:"Grants double mana regen when under 30% mana",cost:7,maxPoints:1,prerequisites:[{id:"mana_regen_1",points:5}],level:8}},te=120*G,se=70*G,ie=[255,32896,32768,16776960,16753920,16744272,8900331,4251856,65280,14329120];class ae{constructor(e,t,i){var a;s(this,"tree"),s(this,"graphics"),s(this,"updateVisual",(e,t,s)=>{const i=this.state.spent.get(e.id)??0;i>0?t.setFillStyle(52326):J(e,this.state)?t.setFillStyle(13421568):t.setFillStyle(6711039),s.setText(`${e.name}\n(${i}/${e.maxPoints})`)}),s(this,"i",0),s(this,"startOffset",new Map),s(this,"endOffset",new Map),this.scene=e,this.state=t,this.setState=i,this.menu(),this.graphics=e.add.graphics(),null==(a=e.MenuLayer)||a.add(this.graphics),this.tree=((e,t,s)=>{const i=(e=>{const t=(e=>{const t=new Map;for(const i of Object.values(e))for(const e of i.prerequisites){const s=t.get(e.id)??[];s.push(i.id),t.set(e.id,s)}const s=i=>{const a=e[i];return{...a,children:(t.get(i)??[]).map(s),level:a.level??0}};return Object.values(e).filter(e=>0===e.prerequisites.length).map(e=>s(e.id))})(e),s=t.reduce((e,t)=>(t.children.length>0&&e.push(t),e),[]);for(const i of s)Q(i,0);return t})(e),a=new Map,n=new Map,r=({node:e,parentDepth:t})=>{var i,o;e.children.sort((t,s)=>{const i=Z(t)===Z(e),a=Z(s)===Z(e);return i&&!a?-1:a&&!i?1:0});const h=e.children.map(t=>r({node:t,parentDepth:e.level})),c=h[0],l=h[h.length-1];let d;if(0===h.length)d=a.get(e.level)??0;else if(1===h.length&&c){const t=c.column,s=a.get(e.level)??0;d=Math.max(t,s)}else if(c&&l){const t=(null==(i=h[e.children.findIndex(t=>Z(t)===Z(e))])?void 0:i.column)??Math.floor(c.column+l.column/2),s=a.get(e.level)??0;d=Math.max(t,s)}else console.log("wtf bro"),d=a.get(e.level)??0;d=Math.max(d,(null==(o=n.get(e.id))?void 0:o.col)??0);for(let s=t+1;s<=e.level;s++){const t=a.get(e.level)??0;a.set(s,Math.max(d+1,t))}return n.set(e.id,{...e,x:0,y:s.y+200+e.level*se,col:d}),{column:d}};i.forEach(e=>{r({node:e,parentDepth:-1})}),n.entries();let o=Number.MAX_SAFE_INTEGER,h=Number.MIN_SAFE_INTEGER;n.forEach(e=>{o=Math.min(e.col,o),h=Math.max(e.col,h)});const c=2*s.x+(t-200)/2-(h-o)*te;return n.forEach(e=>{e.x=Math.max(s.x,c)+e.col*te}),n})(ee,this.scene.scale.width-1200,{x:600,y:600});for(const[,s]of this.tree)this.placeUpgrade(s,this.tree)}menu(){if(!this.scene.MenuLayer)throw new u("scene.MenuLayer");const e=this.scene.add.rectangle(0,0,this.scene.scale.baseSize.width,this.scene.scale.baseSize.height,10592673,.5).setOrigin(0),t=this.scene.add.rectangle(600,600,this.scene.scale.baseSize.width-1200,this.scene.scale.baseSize.height-1200,1118481,.9).setOrigin(0);this.scene.MenuLayer.add(e),this.scene.MenuLayer.add(t)}placeUpgrade(e,t){var s,i;const a=e.x,n=e.y,r=this.scene.add.rectangle(a,n,100,50,6711039).setScale(G),o=this.scene.add.text(a,n,e.name,{fontSize:12*G+"px",color:"#ffffff"}).setOrigin(.5);null==(s=this.scene.MenuLayer)||s.add(r),null==(i=this.scene.MenuLayer)||i.add(o),r.setInteractive({useHandCursor:!0}).on("pointerdown",t=>{t.rightButtonDown()?((e,t,s)=>{if((t.spent.get(e.id)??0)<=0)return!1;for(const[,i]of s)for(const s of i.prerequisites)if(s.id===e.id){const e=t.spent.get(i.id)??0;if(e>0&&e>=s.points)return!1}return!0})(e,this.state,this.tree)&&(((e,t)=>{const s=t.spent.get(e.id)??0;s<=0||(t.spent.set(e.id,s-1),t.availablePoints+=e.cost)})(e,this.state),this.setState(this.state),this.updateVisual(e,r,o)):J(e,this.state)&&(((e,t)=>{if(!J(e,t))return;const s=t.spent.get(e.id)??0;t.availablePoints=t.availablePoints-e.cost,t.spent.set(e.id,s+1)})(e,this.state),this.setState(this.state),this.updateVisual(e,r,o))});for(const h of e.prerequisites){const e=t.get(h.id);if(!e)throw new Error("");const s=this.startOffset.get(`${e.x}:${e.y}`)??e.x,i=e.y+50*G/2,r=this.endOffset.get(`${a}:${n}`)??a,o=n-50*G/2;this.startOffset.set(`${e.x}:${e.y}`,s+25),this.endOffset.set(`${a}:${n}`,r-25),this.graphics.beginPath(),this.graphics.lineStyle(4,ie[this.i++%ie.length]),this.graphics.moveTo(s,i),this.graphics.lineTo(s,i+25),this.graphics.lineTo(r,i+25),this.graphics.lineTo(r,o),this.graphics.lineTo(r-10,o-10),this.graphics.lineTo(r+10,o-10),this.graphics.lineTo(r,o),this.graphics.strokePath()}}}class ne extends Phaser.Scene{constructor(){super({key:h})}preload(){}create(){performance.now(),this.createIncrementalAnimations(),this.createEnemyAnimations(),this.createEffectsAnimations(),performance.now(),this.scene.stop()}createPlayerAnimations(){const e=this.anims;e.exists("player-walk")||e.create({key:"player-walk",frames:e.generateFrameNumbers("player",{start:0,end:3}),frameRate:10,repeat:-1}),e.exists("player-jump")||e.create({key:"player-jump",frames:[{key:"player",frame:5}],frameRate:1,repeat:0})}createIncrementalAnimations(){this.anims.create({key:"move",frames:this.anims.generateFrameNumbers("drone",{frames:[4,5]}),frameRate:8,repeat:-1}),this.anims.create({key:"smooth-move",frames:this.anims.generateFrameNumbers("blobie-walk",{start:0,end:7}),frameRate:16,repeat:-1}),this.anims.create({key:"idle",frames:this.anims.generateFrameNumbers("drone",{frames:[0,2]}),frameRate:4,repeat:-1}),this.anims.create({key:"idle2",frames:this.anims.generateFrameNumbers("drone",{frames:[1,3]}),frameRate:4,repeat:-1}),this.anims.create({key:"mine",frames:this.anims.generateFrameNumbers("drone",{frames:[0,2]}),frameRate:8,repeat:-1}),this.anims.create({key:"deliver",frames:this.anims.generateFrameNumbers("drone",{frames:[8,9]}),frameRate:8,repeat:-1})}createEnemyAnimations(){const e=this.anims;for(const t of K)this.load.spritesheet(t.TEXTURE_KEY,`assets/animations/${t.TEXTURE_KEY}.png`,{frameWidth:34,frameHeight:34});for(const t of K)for(const{key:s,config:i}of Object.values(t.FRAMES))e.exists(s)||e.create({key:s,frames:e.generateFrameNumbers(t.TEXTURE_KEY,i),frameRate:4,repeat:-1})}createEffectsAnimations(){this.anims.create({key:"portal-start",frames:this.anims.generateFrameNumbers("portal-particles",{start:0,end:59}),frameRate:60,repeat:0}),this.anims.create({key:"portal-enabled",frames:this.anims.generateFrameNumbers("portal-particles",{start:60}),frameRate:60,repeat:-1}),this.anims.create({key:"portal",frames:this.anims.generateFrameNumbers("portal",{start:0,end:0}),frameRate:60,repeat:0})}}var re=Object.defineProperty,oe=Object.getOwnPropertyDescriptor;class he extends Phaser.Scene{constructor(){super("Boot"),s(this,"gameScene"),s(this,"sceneRunning",null),s(this,"sceneStopped",!0)}preload(){}create(){this.cameras.main.setBackgroundColor("#FFF000"),this.cameras.main.setBackgroundColor("#CDD7E1"),this.launchScene(o)}launchScene(e,t){this.scene.launch(e,t),this.gameScene=this.scene.get(e)}updateResize(e){e.scale.on("resize",this.resize,e);const t=e.scale.gameSize.width,s=e.scale.gameSize.height;e.parent=new Phaser.Structs.Size(t,s),e.sizer=new Phaser.Structs.Size(e.width,e.height,Phaser.Structs.Size.FIT,e.parent),e.parent.setSize(t,s),e.sizer.setSize(t,s),this.updateCamera(e)}resize(e){if(!this.sceneStopped){const t=e.width,s=e.height;this.parent.setSize(t,s),this.sizer.setSize(t,s);const i=this.cameras.main,a=this.sizer.width/this.game.screenBaseSize.width,n=this.sizer.height/this.game.screenBaseSize.height;i.setZoom(Math.max(a,n)),i.centerOn(this.game.screenBaseSize.width/2,this.game.screenBaseSize.height/2)}}updateCamera(e){const t=e.cameras.main,s=e.sizer.width/this.game.screenBaseSize.width,i=e.sizer.height/this.game.screenBaseSize.height;t.setZoom(Math.max(s,i)),t.centerOn(this.game.screenBaseSize.width/2,this.game.screenBaseSize.height/2)}update(e,t){}}((e,t,s)=>{for(var i,a=oe(t,s),n=e.length-1;n>=0;n--)(i=e[n])&&(a=i(t,s,a)||a);a&&re(t,s,a)})([m()],he.prototype,"update"),a.GameObjects.Layer,a.GameObjects.Sprite,performance.now(),performance.now(),performance.now();class ce extends Phaser.GameObjects.Image{constructor(e,t,i){var a,n;super(e.scene,t,i,"menu-item"),s(this,"text"),s(this,"onClick",e=>{}),e.scene.add.existing(this),this.setInteractive(),this.text=e.scene.add.text(this.width/2+t,this.height/2+i,"",{fontSize:40,color:"#ffffff",stroke:"#000000",strokeThickness:8,align:"center"}).setOrigin(.5,.5).setShadow(5,5,"#5588EE",0,!0,!0),e.add(this.text),this.on("pointerup",e=>{this.onClick(e)}),this.on("pointerover",t=>{this.scene.input.setDefaultCursor("pointer"),e.tween.restart(this),this.setRotation(Math.PI/32),setTimeout(()=>{this.setRotation(0)},50)}),this.on("pointerout",t=>{this.scene.input.setDefaultCursor("auto"),e.tween.pause(),this.setRotation(0).setTint(16777215)}),null==(a=this.preFX)||a.setPadding(16),null==(n=this.preFX)||n.addShadow()}}s(ce,"texture","menu-item");class le{constructor(e,t,i){s(this,"tween"),s(this,"target"),this.tween=e.tweens.addCounter({paused:!0,persist:!0,from:t,to:i,duration:200,onUpdate:e=>{if(!this.target)return;let t=e.getValue();if(null===t)throw new Error("invalid tween");t=Math.floor(t),this.target.setTint(Phaser.Display.Color.GetColor(t,t,t))}})}restart(e){this.target=e,this.tween.resume()}pause(){this.target=void 0,this.tween.pause().seek(0)}}class de extends Phaser.GameObjects.Container{constructor(e,t){var i,a,n;super(e,t.x,t.y),s(this,"buttonWidth"),s(this,"buttonHeight"),s(this,"bg"),s(this,"buttons",[]),s(this,"width"),s(this,"tween"),this.scene=e,this.scene.add.existing(this),this.setVisible(!1);const r=this.scene.textures.get(ce.texture).getFrameBounds(),o=this.scene.textures.get("close-icon").getFrameBounds();this.buttonHeight=r.height,this.buttonWidth=r.width,this.width=this.buttonWidth+10+10,this.bg=this.scene.add.tileSprite(0,0,this.menuWidth(1),this.menuHeight(2),"repeating-background").setOrigin(0,0),this.add(this.bg),null==(i=this.bg.preFX)||i.setPadding(32),null==(a=this.bg.preFX)||a.addGlow(16777215,100),null==(n=this.bg.preFX)||n.addShadow();const h=this.scene.add.image(this.buttonWidth-o.width/2+10,o.height/2,"close-icon").setInteractive();h.on("pointerover",e=>{this.scene.input.setDefaultCursor("pointer"),h.setScale(1.1),setTimeout(()=>{this.setScale(1)},50)}),h.on("pointerout",e=>{this.scene.input.setDefaultCursor("auto"),h.setScale(1)}),h.on("pointerup",e=>{this.setVisible(!1)}),this.add(h),this.tween=new le(this.scene,255,204)}menuWidth(e){return this.width=this.buttonWidth+10+10,this.width}menuHeight(e){const t=10*Math.max(e-1,0);return e*this.buttonHeight+t+10+10+100}createButton(e){const t=new ce(this,10,10+(this.buttonHeight+10)*e+100);return t.setPosition(t.width/2+10,t.height/2+(this.buttonHeight+10)*e+100),this.buttons.push(t),this.add(t),t.text.setAbove(t),t}open(e,t){if(!L.instance)throw new p;const s=this.scene.player;L.instance.cameras.main.worldView.x,L.instance.cameras.main.width,L.instance.cameras.main.worldView.y,L.instance.cameras.main.height;const i=L.instance.cameras.main.width-this.width-100;console.log(L.instance.cameras.main.worldView.x,L.instance.cameras.main.width,s.x),s.x>i?this.setPosition(100,t+100):this.setPosition(i,t+100),console.log(this.bg.preFX),this.setVisible(!0)}setButtons(e){for(let t=0;t<e.length;t++){const s=e[t];if(!s)throw new Error("invalid type");const i=this.buttons[t]??this.createButton(t);i.onClick=s.onClick,i.text.text=s.text}this.bg.setSize(this.menuWidth(1),this.menuHeight(e.length));for(let t=e.length;t<this.buttons.length;t++){const e=this.buttons[t];if(!e)return;e.setVisible(!1).text.setVisible(!1)}}}class pe extends Phaser.Physics.Arcade.Sprite{constructor(e,t,i,a){super(e,i.x,i.y,"pickaxe"),s(this,"container"),s(this,"newTween"),s(this,"glow"),s(this,"amount",0),s(this,"amountText"),s(this,"interactionBox"),s(this,"new",!0),this.scene=e,this.resourceType=t,this.scene.add.existing(this),this.scene.physics.add.existing(this);const{x:n,y:r,width:o,height:h}=this.getBounds();this.interactionBox=new Phaser.Geom.Rectangle(n-20,r-20,o+40,h+40),this.setImmovable(!0).setScale(.5),this.scene.player&&this.scene.physics.add.collider(this.scene.player,this,()=>{},()=>{},this);const{centerX:c,top:l}=this.getBounds();this.amountText=this.scene.add.text(c,l-20,"",w).setOrigin(.5),this.container=new de(e,i),this.container.setButtons(a);const d=e.tweens.addCounter({paused:!0,persist:!0,from:255,to:204,duration:200,onUpdate:e=>{let t=e.getValue();if(null===t)throw new Error("invalid tween");t=Math.floor(t),this.setTint(Phaser.Display.Color.GetColor(t,t,t))}});this.on("pointerover",e=>{this.scene.input.setDefaultCursor("pointer"),d.play(),this.setRotation(Math.PI/32),setTimeout(()=>{this.setRotation(0)},50)}),this.on("pointerout",e=>{this.scene.input.setDefaultCursor("auto"),d.pause().seek(0),this.clearTint(),this.setRotation(0)}),this.on("pointerup",e=>{this.disableNew(),this.container.open(0,0)}),this.setInteractive(),this.on("update",e=>{console.log(e)}),this.enableNew()}setButtons(e){this.container.setButtons(e)}enableNew(){var e,t,s;null==(e=this.preFX)||e.setPadding(32),null==(t=this.preFX)||t.addShadow(),this.glow=null==(s=this.preFX)?void 0:s.addGlow(16762624),this.newTween=this.scene.tweens.add({targets:this.glow,outerStrength:100,yoyo:!0,loop:-1,ease:"sine.inout",duration:1e3})}disableNew(){var e,t,s,i;this.new&&(this.new=!1,this.glow&&(null==(e=this.preFX)||e.remove(this.glow)),null==(t=this.preFX)||t.setPadding(16),this.glow=null==(s=this.preFX)?void 0:s.addGlow(16777215,100),null==(i=this.preFX)||i.addShadow(),this.newTween.stop())}onInteract(){this.container.open(0,0)}update(){const e=this.scene.player.x,t=this.scene.player.y;this.interactionBox.contains(e,t)?b.instance.setOnInteract(this):b.instance.removeOnInteract(this)}attention(){!1!==this.new&&(this.setRotation(Math.PI/32),this.scene.time.delayedCall(50,()=>{this.setRotation(0)}),Math.random()<.3&&(this.scene.time.delayedCall(100,()=>{this.setRotation(Math.PI/32)}),this.scene.time.delayedCall(150,()=>{this.setRotation(0)})),this.scene.time.delayedCall(1750+500*Math.random(),()=>{this.attention()}))}}var ue=Object.defineProperty,me=Object.getOwnPropertyDescriptor;class ge extends Phaser.Physics.Arcade.Sprite{constructor(e,t,i,a=1){super(e,t.x,t.y,""),s(this,"level"),s(this,"debugText"),s(this,"xpBase",1.2),s(this,"xp"),s(this,"xpRequired"),s(this,"task","idle"),s(this,"speed",100),s(this,"travelTime",1e4),s(this,"travelElapsed",0),s(this,"distance",0),s(this,"carrying",0),s(this,"resourceContainer"),s(this,"miningTime",500),s(this,"miningElapsed",0),s(this,"resourceTarget"),this.scene=e,this.base=t,this.setOrigin(.5,.5).setScale(2),this.scene.add.existing(this),this.scene.physics.add.existing(this),this.scene.player&&(this.scene.physics.add.collider(this.scene.player,this,()=>{},()=>{},this),this.setBounce(.25)),this.resourceContainer=i,this.level=a,this.xp=this.xpBase**a,this.xpRequired=this.xpBase**(a+1),this.resourceTarget=void 0,this.debugText=this.scene.add.text(this.x,this.y,"",{fontFamily:"Arial Black",fontSize:20,color:"#ffffff",stroke:"#000000",strokeThickness:4,align:"center"}),this.play("idle")}assignResource(e){if(this.resourceTarget=e,e){const t=this.base.x-e.x,s=this.base.y-e.y;this.distance=Math.sqrt(t*t+s*s)}}handleXp(){this.xp+=this.level,this.xp>=this.xpRequired&&(this.level+=1,this.xpRequired=this.xpBase**(this.level+1),this.travelTime=Math.max(Math.trunc(.9*this.travelTime),500),this.miningTime=Math.max(Math.trunc(.9*this.miningTime),100))}update(e,t){switch((e=>{try{throw new Error}catch(t){if(t instanceof Error){const s=/(\w+)@|at (\w+)\.(\w+) \(/g,i=t.stack;if(!i)return;const a=s.exec(i);if("update"!==(null==a?void 0:a[3]))throw new Error("must be used within an update method");if(a[2]!==e.constructor.name)throw new Error("idk how this would happen or why it would matter")}}if(e.body instanceof Phaser.Physics.Arcade.Body){const t=e.scene.add.graphics({lineStyle:{width:2,color:16711680},fillStyle:{color:16711680,alpha:.3}});t.strokeRect(e.body.left,e.body.top,e.body.width,e.body.height),e.scene.time.delayedCall(1,()=>{t.destroy()})}})(this),this.debugText.setPosition(this.x,this.y).setOrigin(0,1),this.debugText.text=`lvl: ${this.level} (${this.xp}/${this.xpRequired})\ntravel:\t${this.travelTime}\nmining:\t${this.miningTime}`,this.task){case"move":if(void 0===this.resourceTarget){this.task="deliver",this.play("deliver");break}this.moveTo(this.resourceTarget.x,this.resourceTarget.y,t),this.reached(this.resourceTarget)&&(this.task="mine",this.play("mine"),this.travelElapsed=0,this.miningElapsed=0);break;case"mine":if(void 0===this.resourceTarget){this.task="deliver",this.play("deliver");break}if(!this.reached(this.resourceTarget)){this.task="move",this.play("move");break}if(this.miningElapsed+=t,this.miningElapsed>=this.miningTime){if(this.carrying+=this.resourceTarget.mine(this.level-this.carrying),this.carrying<this.level)return this.resourceTarget=void 0,this.task="move",void this.play("move");this.task="deliver",this.play("move")}break;case"celebrate":if("deliver"===this.anims.getName())break;this.handleXp(),this.play("deliver"),setTimeout(()=>{this.task="move",this.play("move")},250);break;case"deliver":if(this.moveTo(this.base.x,this.base.y,t),this.reached(this.base)){if(this.resourceContainer.addResource(this.carrying),this.carrying=0,this.travelElapsed=0,void 0===this.resourceTarget){this.task="idle",this.play("idle");break}this.task="celebrate"}break;case"idle":void 0!==this.resourceTarget&&(this.task="move",this.play("move"))}}moveTo(e,t,s){const i=e-this.x,a=t-this.y,n=Math.sqrt(i*i+a*a),r=this.travelTime-this.travelElapsed;if(n>10){let e=n/r*1e3;e=Math.max(e,100);const t=Math.atan2(a,i),s=Math.cos(t)*e,o=Math.sin(t)*e;this.flipX=s<0,this.body instanceof Phaser.Physics.Arcade.Body&&(this.body.velocity.x/s<.1||this.body.velocity.y/o<.1)&&(console.log(s,o),this.setVelocity(s,o))}else this.setVelocity(0,0);this.travelElapsed+=s}moveToPosition(e,t,s){const i=e-this.x,a=t-this.y,n=Math.sqrt(i*i+a*a),r=this.travelTime-this.travelElapsed;if(n>1){let e=n/r*1e3;e=Math.max(e,100);const t=Math.atan2(a,i),o=Math.cos(t)*e*(s/1e3),h=Math.sin(t)*e*(s/1e3);this.flipX=o<0,this.x+=o,this.y+=h,console.log(o,h),this.setVelocity(e,e)}}reached(e){const t=e.x-this.x,s=e.y-this.y;return t*t+s*s<100}}((e,t,s)=>{for(var i,a=me(t,s),n=e.length-1;n>=0;n--)(i=e[n])&&(a=i(t,s,a)||a);a&&ue(t,s,a)})([(()=>{let e=0;return function(t,s,i){const a=i.value;if("function"!=typeof a)throw new Error("you fucked up a decorator dawg");return i.value=function(...t){const s=console.log;console.log=(...t)=>{e%1==0&&console.trace(t)};try{return e++,a.apply(this,t)}finally{console.log=s}},i}})()],ge.prototype,"moveTo");class ye extends Phaser.Physics.Arcade.Image{constructor(e,t,i,a,n=1e3){const r=["00","16","32","48","64"],o=`${t}${r[Math.floor(Math.random()*r.length)]??"00"}`;super(e,i.x,i.y,"ores",o),s(this,"text"),this.scene=e,this.resourceType=t,this.position=i,this.size=a,this.amountLeft=n;const h=this.size/this.width;this.setScale(h),this.scene.physics.add.existing(this),this.text=this.scene.add.text(this.position.x,this.position.y,`${this.amountLeft}`,{fontSize:40}).setOrigin(.5,2),e.add.existing(this)}mine(e){const t=Math.min(e,this.amountLeft);return this.amountLeft-=t,this.text.setText(`${this.amountLeft}`),t}}class fe extends Phaser.GameObjects.Text{constructor(e,t,i,a,n){super(e,t,i,a,n),s(this,"tween"),this.setVisible(!1),this.setAlpha(0)}}class be{constructor(e,t,i){var a;s(this,"drones",[]),s(this,"resourceNodes",[]),s(this,"nodes"),s(this,"notificationText"),s(this,"building"),s(this,"baseCost",10),s(this,"costMultiplier",1.2),s(this,"costExponent",1.05),s(this,"amount",1e3),s(this,"resourceSize",64),this.scene=e,this.type=t,this.probeBody=i,this.nodes=this.scene.physics.add.group(this.resourceNodes);const n=this.scene.add.rectangle(0,0,this.scene.scale.baseSize.width,this.scene.scale.baseSize.height,255,255).setInteractive().on("pointerdown",e=>{e.rightButtonDown()&&this.createNode(e)}).setOrigin(0);for(null==(a=this.scene.GameLayer)||a.add(n),this.building=new pe(this.scene,this.type,{x:2e3,y:1e3},[{text:`Spawn Drone\n(${this.cost})`,tooltip:"1",onClick:()=>{this.createDrone()}}]),this.notificationText=this.scene.add.group({maxSize:15});15!==this.notificationText.children.size;){const e=new fe(this.scene,this.building.x,this.building.y,"+1",{fontSize:40,color:we[this.type].toString(16),strokeThickness:8,align:"center"});e.tween=this.scene.tweens.add({paused:!0,persist:!0,targets:e,x:{from:this.building.x,to:this.building.x+50},y:{from:this.building.y-50,to:this.building.y-150},alpha:[1,.95,.9,.85,.8,.75,.7,.6,.5,0],duration:500}),this.notificationText.add(e,!0)}this.createNode({x:this.scene.scale.baseSize.width*(3/4),y:this.scene.scale.baseSize.height*(3/4)})}get cost(){const e=this.costMultiplier*this.drones.length,t=this.costExponent**this.drones.length-1;return Math.trunc(this.baseCost*(e+t))}update(e,t){var s;for(const i of this.drones){if(0===(null==(s=i.resourceTarget)?void 0:s.amountLeft)&&(i.resourceTarget.text.destroy(),this.nodes.remove(i.resourceTarget,!0,!0),i.assignResource(void 0)),!i.resourceTarget){const e=this.scene.physics.closest({x:i.x,y:i.y},this.nodes.getChildren());e&&e instanceof ye&&i.assignResource(e)}i.update(e,t)}this.building.update(),this.building.amountText.setText(`${this.amount}`)}createDrone(){if(this.amount<this.cost)return;const e=new ge(this.scene,this.building,this,1);this.amount-=this.cost,this.drones.push(e),this.scene.physics.add.collider(this.drones,e),this.scene.physics.overlap(this.drones,e),this.building.setButtons([{text:`Spawn Drone\n(${this.cost})`,tooltip:"1",onClick:()=>{this.createDrone()}}])}createNode(e){var t;e??(e={x:600,y:200}),this.probeBody.setEnable(!0).reset(e.x,e.y);const s=this.scene.physics.overlap(this.probeBody,this.nodes);if(this.probeBody.setEnable(!1),s)return;const i=new ye(this.scene,this.type,e,this.resourceSize);return this.resourceNodes.push(i),null==(t=this.scene.ResourceLayer)||t.add(i),this.nodes.add(i),i}addResource(e){var t;this.amount+=e;const s=this.notificationText.getMatching("alpha",0),i=s[Math.trunc(s.length*Math.random())];let a;i instanceof fe&&(a=i,a.text=`+${e}`,a.setVisible(!0),null==(t=a.tween)||t.restart())}consumeResource(e){return this.amount>=e&&(this.amount-=e,!0)}}const we={stone:5855577,copper:13857085,silver:14869218,gold:16634896};class xe{constructor(e){s(this,"resources",new Map),s(this,"probeBody"),this.scene=e,this.probeBody=this.scene.physics.add.body(0,0,0,0).setEnable(!1)}update(e,t){for(const[,s]of this.resources)s.update(e,t)}initialize(e){const t=new be(this.scene,e,this.probeBody);this.resources.set(e,t)}createDrone(e){const t=this.resources.get(e);if(!t)throw new Error("meow");t.createDrone()}createNode(e){const t=this.resources.get(e);if(!t)throw new Error("meow");t.createNode()}addResource(e,t){const s=this.resources.get(e);if(!s)throw new Error("meow");s.addResource(t)}consumeResource(e,t){const s=this.resources.get(e);if(!s)throw new Error("meow");return s.consumeResource(t)}}class ve{constructor(e){var t,i,a;s(this,"ellipse"),s(this,"particles"),s(this,"portal"),this.scene=e;const n=e.scale.baseSize.width/2,r=e.scale.baseSize.height/4;this.particles=this.scene.add.sprite(n,r,"portal-particles").setOrigin(.5),this.portal=this.scene.add.sprite(n,r,"portal").setOrigin(.5),this.particles.play("portal-start"),this.particles.on("animationcomplete",e=>{if(!(e instanceof Phaser.Animations.Animation))throw new Error("not an animation?");"portal-start"===e.key&&this.particles.play("portal-enabled")});const{x:o,y:h,width:c,height:l}=this.portal;if(this.ellipse=new Phaser.Geom.Ellipse(o,h,c-20,l-20),!0===this.scene.physics.config.debug){const e=this.scene.add.ellipse(o,h,c-20,l-20,15790320);null==(t=this.scene.ResourceLayer)||t.add(e)}null==(i=this.scene.ResourceLayer)||i.add(this.particles),null==(a=this.scene.ResourceLayer)||a.add(this.portal)}onInteract(){this.scene.scene.start(d),L.instance&&(L.instance.activeScene=d)}update(){const e=this.scene.player.x,t=this.scene.player.y;Phaser.Geom.Ellipse.Contains(this.ellipse,e,t)?b.instance.setOnInteract(this):b.instance.removeOnInteract(this)}}class ke extends Phaser.Scene{constructor(){super(l),s(this,"resourceManager"),s(this,"ResourceLayer",null),s(this,"GameLayer",null),s(this,"UILayer",null),s(this,"MenuLayer",null),s(this,"portal"),s(this,"_player"),s(this,"portalEnabled",!1)}get player(){var e,t;const s=this.scale.baseSize.width/2,i=this.scale.baseSize.height/2;return(null==(e=this._player)?void 0:e.scene)!==this&&(null==(t=this._player)||t.destroy(),this._player=void 0),this._player||(this._player=new $(this,s,i,"char")),this._player}create(){var e;this.ResourceLayer=this.add.layer(),this.GameLayer=this.add.layer(),this.UILayer=this.add.layer(),this.MenuLayer=this.add.layer(),null==(e=this.input.mouse)||e.disableContextMenu(),this.resourceManager=new xe(this),this.setupAnimations(),this.portal=new ve(this),this.resourceManager.initialize("stone")}setupAnimations(){}update(e,t){var s,i;null==(s=this.resourceManager)||s.update(e,t),this.player.update(e,t),null==(i=this.portal)||i.update()}}const Pe=[l,d];class Se extends a.Scene{constructor(){super({key:n,visible:!1,active:!1}),s(this,"background"),s(this,"logo"),s(this,"title"),s(this,"menu"),s(this,"started",!1),s(this,"buttons",[]),s(this,"weapon",()=>{var e;const t=this.scene.get(d);if(!(t instanceof Y))return;if(!(null==(e=t.player)?void 0:e.weapons))return;const s=t.player.weapons;let i=this.scale.baseSize.width/2-200*(s.size-1)-10*(s.size-1);for(const[a,n]of s){const e=this.add.rectangle(i,100,400,200,a===t.player.active_weapon?30464:16711680).setInteractive().on("pointerup",()=>{if(t.player){t.player.active_weapon=a;for(const t of this.buttons)t===e?t.setFillStyle(30464):t.setFillStyle(16711680)}}),s=this.add.text(i,100,a,{fontSize:40,color:"#ffffff",stroke:"#000000",strokeThickness:8,align:"center"}).setOrigin(.5);this.add.existing(e),this.add.existing(s),this.buttons.push(e),i+=410}}),s(this,"switchers",[]),s(this,"switcher",()=>{var e;let t=this.scale.baseSize.width/2-200*(Pe.length-1)-10*(Pe.length-1);const s=this.scale.baseSize.height-100;for(const i of Pe){const a=this.add.rectangle(t,s,400,200,i===(null==(e=L.instance)?void 0:e.activeScene)?30464:16711680).setInteractive().on("pointerup",()=>{var e;console.log(i),console.log(L.instance),null==(e=L.instance)||e.launch(i);for(const t of this.switchers)t===a?t.setFillStyle(30464):t.setFillStyle(16711680)}),n=this.add.text(t,s,i,{fontSize:40,color:"#ffffff",stroke:"#000000",strokeThickness:8,align:"center"}).setOrigin(.5);this.add.existing(a),this.add.existing(n),this.switchers.push(a),t+=410}})}create(){this.menu=this.add.rectangle(600,200,this.scale.baseSize.width-1200,this.scale.baseSize.height-400,1118481).setOrigin(0),this.weapon(),this.switcher()}}const _e={availablePoints:15,spent:new Map};class Ie extends Phaser.Scene{constructor(){super({key:r,visible:!1,active:!1}),s(this,"GameLayer",null),s(this,"UILayer",null),s(this,"MenuLayer",null)}create(){this.GameLayer=this.add.layer(),this.UILayer=this.add.layer(),this.MenuLayer=this.add.layer(),new ae(this,_e,()=>{console.log("setState")})}}class Me extends Phaser.Plugins.BasePlugin{constructor(e){super(e),s(this,"alive"),this.alive=!0}isAlive(){return this.alive}}const Te=[he,M,ne,Y,ke,Ie,L,Se],Ee=a.Scale.FIT,Ce={type:a.AUTO,width:3840,height:2160,min:{width:720,height:480},scale:{mode:Ee,autoCenter:a.Scale.CENTER_BOTH},physics:{default:"arcade",arcade:{gravity:{x:0,y:0},debug:!1}},input:{gamepad:!0},parent:"game-container",plugins:{global:[{key:"PlayerManager",plugin:Me,start:!1,mapping:"playermanager"}]},scene:Te};document.addEventListener("DOMContentLoaded",()=>{new a.Game({...Ce,parent:"game-container"})});
